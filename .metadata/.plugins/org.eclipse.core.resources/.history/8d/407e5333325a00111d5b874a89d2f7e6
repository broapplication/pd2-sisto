<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions name="WorkflowService" targetNamespace="http://pad.polito.it/Workflow"
	xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:tns="http://pad.polito.it/Workflow"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
	
	<types>

		<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			targetNamespace="http://pad.polito.it/Workflow" xmlns:tns="http://pad.polito.it/Workflow">
			<xsd:element name="getWorkflowNames" type="tns:getWorkflowNames" />
			<xsd:element name="getWorkflowNamesResponse" type="tns:getWorkflowNamesResponse">

				<xsd:unique name="dummy6">

					<xsd:selector xpath="name" />

					<xsd:field xpath="." />
				</xsd:unique>
			</xsd:element>
			<xsd:element name="GenericFault" type="tns:genericFault" />

			<xsd:element name="getWorkflows" type="tns:getWorkflows">

				<xsd:unique name="dummy7">

					<xsd:selector xpath="name" />

					<xsd:field xpath="." />
				</xsd:unique>
			</xsd:element>
			<xsd:element name="getWorkflowsResponse" type="tns:getWorkflowsResponse">

				<xsd:key name="workflowNameKey">

					<xsd:selector xpath="workflow" />

					<xsd:field xpath="name" />
				</xsd:key>
			</xsd:element>
			<xsd:element name="UnknownNames" type="tns:UnknownNames">

				<xsd:unique name="dummy13">

					<xsd:selector xpath="names" />

					<xsd:field xpath="." />
				</xsd:unique>
			</xsd:element>
			<xsd:element name="UnknownCodes" type="tns:UnknownCodes">

				<xsd:unique name="dummy12">

					<xsd:selector xpath="codes" />

					<xsd:field xpath="." />
				</xsd:unique>
			</xsd:element>

			<xsd:complexType name="genericFault">
				<xsd:sequence>
					<xsd:element name="errno" type="xsd:int"></xsd:element>
					<xsd:element name="message" type="xsd:string"
						minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="getWorkflows">
				<xsd:sequence>
					<xsd:element name="name" type="tns:Name" minOccurs="0"
						maxOccurs="unbounded" />
					<xsd:element name="processField" minOccurs="0"
						type="tns:processFieldType">

					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="getWorkflowsResponse">
				<xsd:sequence>
					<xsd:element name="workflow" type="tns:workflowType"
						minOccurs="0" maxOccurs="unbounded">
						<xsd:key name="workflowNameKey_internal">
							<xsd:selector xpath="name" />
							<xsd:field xpath="." />
						</xsd:key>
						<xsd:keyref name="processSummary_workflowNameKeyref_internal"
							refer="tns:workflowNameKey_internal">
							<xsd:selector xpath="processSummary" />
							<xsd:field xpath="workflowName" />
						</xsd:keyref>

						<xsd:key name="actionKey">
							<xsd:selector xpath="action" />
							<xsd:field xpath="name" />
						</xsd:key>
						<xsd:keyref name="nextActionKeyRef" refer="tns:actionKey">
							<xsd:selector xpath="action" />
							<xsd:field xpath="nextAction" />
						</xsd:keyref>

						<xsd:keyref name="processSummary_actionNameKeyRef"
							refer="tns:actionKey">
							<xsd:selector
								xpath="tns:processSummary/actionStatus/name|tns:processSummary/activeActionStatus/name|tns:processSummary/availableActionStatus/name|tns:processSummary/terminatedActionStatus/name" />
							<xsd:field xpath="." />
						</xsd:keyref>

						<xsd:unique name="dummy10">
							<xsd:selector xpath="PCode|processSummary/PCode" />
							<xsd:field xpath="." />
						</xsd:unique>


					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="workflowType">
				<xsd:sequence>
					<xsd:element name="name" type="tns:Name" />
					<xsd:element name="action" type="tns:actionType"
						nillable="true" minOccurs="0" maxOccurs="unbounded" />
					<xsd:choice>
						<xsd:element name="PCode" type="tns:PCode" minOccurs="0"
							maxOccurs="unbounded">
						</xsd:element>
						<xsd:element minOccurs="0" maxOccurs="unbounded"
							ref="tns:processSummary" />
					</xsd:choice>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="actionType">
				<xsd:sequence>
					<xsd:element name="name" type="tns:Name" />
					<xsd:element name="automaticallyInstantiated" type="xsd:boolean" />
					<xsd:element name="role" type="tns:Role" />
					<xsd:choice>
						<xsd:element name="nextAction" type="tns:Name"
							nillable="true" minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="workflow" type="tns:Name"
							minOccurs="0" />
					</xsd:choice>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="UnknownNames">
				<xsd:sequence>
					<xsd:element name="message" type="xsd:string"
						minOccurs="0" />
					<xsd:element name="names" type="tns:Name" maxOccurs="unbounded"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="UnknownRoles">
				<xsd:sequence>
					<xsd:element name="message" type="xsd:string"
						minOccurs="0" />
					<xsd:element name="roles" type="tns:Role" maxOccurs="unbounded"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="getWorkflowNames">
				<xsd:sequence />
			</xsd:complexType>

			<xsd:complexType name="getWorkflowNamesResponse">
				<xsd:sequence>
					<xsd:element name="name" type="tns:Name" minOccurs="0"
						maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:complexType>

			<xsd:simpleType name="Name">
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[a-zA-Z][a-zA-Z0-9]*" />
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:simpleType name="PCode">
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[a-zA-Z0-9]*" />
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:simpleType name="ACode">
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[a-zA-Z0-9]*" />
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:simpleType name="ID">
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[a-zA-Z0-9]*" />
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:simpleType name="Role">
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[a-zA-Z ]*" />
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="getProcessSummaries">
				<xsd:sequence>
					<xsd:element name="restrictions" nillable="true">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="PCode" type="tns:PCode"
									minOccurs="0" maxOccurs="unbounded">
								</xsd:element>
								<xsd:element name="workflowName" type="tns:Name"
									minOccurs="0" maxOccurs="unbounded">
								</xsd:element>
								<xsd:element name="role" type="tns:Role" minOccurs="0"
									maxOccurs="unbounded">
								</xsd:element>
								<xsd:element name="actor" type="tns:actorType"
									minOccurs="0" maxOccurs="unbounded">
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
						<xsd:unique name="dummy1">
							<xsd:selector xpath="PCode" />
							<xsd:field xpath="." />
						</xsd:unique>
						<xsd:unique name="dummy2">
							<xsd:selector xpath="workflowName" />
							<xsd:field xpath="." />
						</xsd:unique>
						<xsd:unique name="dummy3">
							<xsd:selector xpath="role" />
							<xsd:field xpath="." />
						</xsd:unique>
						<xsd:unique name="dummy4">
							<xsd:selector xpath="actor" />
							<xsd:field xpath="name" />
							<xsd:field xpath="role" />
						</xsd:unique>
					</xsd:element>
					<xsd:element name="fields" nillable="true">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="workflowName" type="xsd:boolean"
									minOccurs="0">
								</xsd:element>
								<xsd:element name="startTime" type="xsd:boolean"
									minOccurs="0">
								</xsd:element>
								<xsd:element name="actions" type="tns:actionsField"
									minOccurs="0">
								</xsd:element>
								<xsd:element name="availableActions" type="tns:actionsField"
									minOccurs="0">
								</xsd:element>
								<xsd:element name="activeActions" type="tns:actionsField"
									minOccurs="0">
								</xsd:element>
								<xsd:element name="terminatedActions" type="tns:actionsField"
									minOccurs="0">
								</xsd:element>
								<xsd:element name="actionFieldType" minOccurs="0" type="tns:actionFieldType">
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="getProcessSummariesResponse">
				<xsd:sequence>
					<xsd:element ref="tns:processSummary" minOccurs="0"
						maxOccurs="unbounded">
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:element name="processSummary" type="tns:processSummary">

				<xsd:unique name="dummy8">

					<xsd:selector
						xpath="availableActionStatus|activeActionStatus|terminatedActionStatus" />

					<xsd:field xpath="ACode" />
				</xsd:unique>

				<xsd:unique name="dummy9">

					<xsd:selector xpath="actionStatus" />

					<xsd:field xpath="ACode" />
				</xsd:unique>
			</xsd:element>

			<xsd:complexType name="processSummary">
				<xsd:sequence>
					<xsd:element name="PCode" type="tns:PCode"></xsd:element>
					<xsd:element name="workflowName" type="tns:Name"
						minOccurs="0">
					</xsd:element>
					<xsd:element name="startTime" type="xsd:dateTime"
						minOccurs="0">
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="actions" type="xsd:int"></xsd:element>
						<xsd:element name="actionStatus" type="tns:actionStatusType"
							minOccurs="0" maxOccurs="unbounded" nillable="true">
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="availableActions" type="xsd:int" />
						<xsd:element name="availableActionStatus" type="tns:actionStatusType"
							minOccurs="0" maxOccurs="unbounded" nillable="true">
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="activeActions" type="xsd:int" />
						<xsd:element name="activeActionStatus" type="tns:actionStatusType"
							minOccurs="0" maxOccurs="unbounded" nillable="true">
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="terminatedActions" type="xsd:int">
						</xsd:element>
						<xsd:element name="terminatedActionStatus" type="tns:actionStatusType"
							minOccurs="0" maxOccurs="unbounded" nillable="true">
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="UnknownCodes">
				<xsd:sequence>
					<xsd:element name="message" type="xsd:string"
						minOccurs="0" maxOccurs="1">
					</xsd:element>
					<xsd:element name="codes" type="tns:PCode" minOccurs="0"
						maxOccurs="unbounded"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="actionStatusType">
				<xsd:sequence>
					<xsd:element name="ACode" type="tns:ACode"></xsd:element>
					<xsd:choice>
						<xsd:element name="name" type="tns:Name"></xsd:element>
						<xsd:element name="action" type="tns:actionType"></xsd:element>
					</xsd:choice>
					<xsd:element name="terminationTime" type="xsd:dateTime"
						minOccurs="0">
					</xsd:element>
					<xsd:element name="actor" type="tns:actorType"
						minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="actorType">
				<xsd:sequence>
					<xsd:element name="name" type="tns:ActorName"></xsd:element>
					<xsd:element name="role" type="tns:Role"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:simpleType name="ActorName">
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[a-zA-Z]|[a-zA-Z][a-zA-Z ]*[a-zA-Z]">
					</xsd:pattern>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:element name="takeInCharge" type="tns:takeInCharge">
			</xsd:element>
			<xsd:element name="takeInChargeResponse" type="tns:takeInChargeResponse">
			</xsd:element>
			<xsd:complexType name="takeInCharge">
				<xsd:sequence>
					<xsd:element name="clientID" type="tns:ID"></xsd:element>
                    <xsd:element name="requestID" type="xsd:int"></xsd:element>
                    <xsd:element name="PCode" type="tns:PCode" />
					<xsd:element name="ACode" type="tns:ACode" />
					<xsd:element name="actor" type="tns:actorType" />
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="takeInChargeResponse">
				<xsd:sequence>

					<xsd:element name="actionStatus" type="tns:actionStatusType"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="UnknownCode" type="tns:genericFault">
			</xsd:element>

			<xsd:element name="UnknownName" type="tns:genericFault">
			</xsd:element>

			<xsd:element name="ActionFault" type="tns:genericFault"></xsd:element>
			<xsd:element name="DifferentRole" type="tns:DifferentRole"></xsd:element>

			<xsd:complexType name="DifferentRole">
				<xsd:sequence>
					<xsd:element name="expected" type="xsd:string"></xsd:element>
					<xsd:element name="received" type="xsd:string"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="terminateAction" type="tns:terminateAction">

				<xsd:unique name="dummy11">

					<xsd:selector xpath="nextAction" />

					<xsd:field xpath="." />
				</xsd:unique>
			</xsd:element>
			<xsd:element name="terminateActionResponse" type="tns:terminateActionResponse">
			</xsd:element>

			<xsd:complexType name="terminateAction">
				<xsd:sequence>
					<xsd:element name="clientID" type="tns:ID"></xsd:element>
                    <xsd:element name="requestID" type="xsd:int"></xsd:element>
                    <xsd:element name="PCode" type="tns:PCode" />
					<xsd:element name="ACode" type="tns:ACode" />
					<xsd:element name="nextAction" type="tns:Name"
						minOccurs="0" maxOccurs="unbounded">
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>


			<xsd:element name="getProcessSummaries" type="tns:getProcessSummaries"></xsd:element>

			<xsd:element name="getProcessSummariesResponse" type="tns:getProcessSummariesResponse">

				<xsd:unique name="dummy5">

					<xsd:selector xpath="processSummary" />

					<xsd:field xpath="PCode" />
				</xsd:unique>
			</xsd:element>

			<xsd:element name="UnknownRoles" type="tns:UnknownRoles">

				<xsd:unique name="dummy14">

					<xsd:selector xpath="roles" />

					<xsd:field xpath="." />
				</xsd:unique>
			</xsd:element>

			<xsd:element name="ActorFault" type="tns:genericFault"></xsd:element>

			<xsd:complexType name="terminateActionResponse">
				<xsd:sequence>

					<xsd:element name="terminationTime"
						type="xsd:dateTime">
					</xsd:element>
					<xsd:choice maxOccurs="1" minOccurs="0">
						<xsd:element name="nextProcess"
							type="tns:processSummary">
						</xsd:element>
						<xsd:element name="nextActionStatus"
							type="tns:actionStatusType" maxOccurs="unbounded" minOccurs="0">
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:simpleType name="actionsField">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="length"></xsd:enumeration>
					<xsd:enumeration value="list"></xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>


			<xsd:element name="newProcess" type="tns:newProcess">
			</xsd:element>
			<xsd:element name="newProcessResponse" type="tns:newProcessResponse">
			</xsd:element>
			<xsd:complexType name="newProcess">
				<xsd:sequence>
					<xsd:element name="clientID" type="tns:ID"></xsd:element>
                    <xsd:element name="requestID" type="xsd:int"></xsd:element>
                    <xsd:element name="workflowName" type="tns:Name">
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="newProcessResponse">
				<xsd:sequence>
					<xsd:element name="processSummary" type="tns:processSummary">
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="takeClientID">
				<xsd:complexType>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="takeClientIDResponse">
				<xsd:complexType>
					<xsd:sequence>

						<xsd:element name="clientID" type="xsd:string"></xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getRoles">
				<xsd:complexType>
					<xsd:sequence>

					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getRolesResponse" type="tns:getRolesResponse">
			</xsd:element>
			<xsd:complexType name="getRolesResponse">
				<xsd:sequence>
					<xsd:element minOccurs="0" maxOccurs="unbounded"
						name="role" type="tns:Role">
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		
			<xsd:simpleType name="processFieldType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="PCode"></xsd:enumeration>
					<xsd:enumeration value="processSummary"></xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		
			<xsd:simpleType name="actionFieldType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="name"></xsd:enumeration>
					<xsd:enumeration value="action"></xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>
	</types>
	<message name="GenericFault">
		<part name="fault" element="tns:GenericFault" />
	</message>

	<message name="getWorkflowNames">
		<part name="parameters" element="tns:getWorkflowNames" />
	</message>
	<message name="getWorkflowNamesResponse">
		<part name="parameters" element="tns:getWorkflowNamesResponse" />
	</message>
	<message name="getWorkflows">
		<part name="parameters" element="tns:getWorkflows" />
	</message>
	<message name="getWorkflowsResponse">
		<part name="parameters" element="tns:getWorkflowsResponse" />
	</message>
	<message name="UnknownNames">
		<part name="fault" element="tns:UnknownNames" />
	</message>

	<message name="UnknownRoles">
		<part name="fault" element="tns:UnknownRoles"></part>
	</message>
	<message name="UnknownCode">
		<part name="fault" element="tns:UnknownCode"></part>
	</message>
	<message name="UnknownCodes">
		<part name="fault" element="tns:UnknownCodes"></part>
	</message>

	<message name="takeInCharge">
		<part name="parameters" element="tns:takeInCharge"></part>
	</message>
	<message name="takeInChargeResponse">
		<part name="parameters" element="tns:takeInChargeResponse"></part>
	</message>

	<message name="ActionFault">
		<part name="fault" element="tns:ActionFault"></part>
	</message>
	<message name="ActorFault">
		<part name="fault" element="tns:ActorFault"></part>
	</message>
	<message name="DifferentRole">
		<part name="fault" element="tns:DifferentRole"></part>
	</message>

	<message name="terminateAction">
		<part name="parameters" element="tns:terminateAction"></part>
	</message>
	<message name="terminateActionResponse">
		<part name="parameters" element="tns:terminateActionResponse"></part>
	</message>
	<message name="getProcessSummaries">
		<part name="parameters" element="tns:getProcessSummaries"></part>
	</message>
	<message name="getProcessSummariesResponse">
		<part name="parameters" element="tns:getProcessSummariesResponse"></part>
	</message>

	<message name="newProcess">
		<part name="parameters" element="tns:newProcess"></part>
	</message>
	<message name="newProcessResponse">
		<part name="parameters" element="tns:newProcessResponse"></part>
	</message>

	<message name="UnknownName">
		<part name="fault" element="tns:UnknownName"></part>
	</message>
	<message name="takeClientIDRequest">
		<part name="parameters" element="tns:takeClientID"></part>
	</message>
	<message name="takeClientIDResponse">
		<part name="parameters" element="tns:takeClientIDResponse"></part>
	</message>
	<message name="getRoles">
		<part name="parameters" element="tns:getRoles"></part>
	</message>
	<message name="getRolesResponse">
		<part name="parameters" element="tns:getRolesResponse"></part>
	</message>
	<portType name="WorkflowInfoPortType">
		<documentation>Interfaccia del servizio di informazioni sullo stato dei workflow e dei processi.
Non permettere di modificare lo stato di workflow o processi</documentation>
		<operation name="getWorkflowNames">
			<documentation>Permette di ottenere la lista dei nomi dei workflow.
Se il servizio non può rispondere, viene restituito un errore.</documentation>
			<input message="tns:getWorkflowNames" />
			<output message="tns:getWorkflowNamesResponse" />
			<fault name="GenericFault" message="tns:GenericFault" />
		</operation>
		<operation name="getWorkflows">
			<documentation>Permette di ottenere dettagli sui workflow richiesti.
Nella richiesta va specificata la lista dei nomi dei workflow di cui ottenere informazioni.
Se si vogliono anche informazioni sui processi, includere nella richiesta il campo processField:
processField=&quot;PCode&quot; per ottenere solo la lista dei codici dei processi;
processField=&quot;processSummary&quot; per informazioni dettagliate sui processi.
Nella risposta, sarà restituita la lista con le informazioni relative ai workflow (ed eventualmente ai processi).
Se i parametri di ingresso non sono corretti, oppure se il servizio non può rispondere, viene restituito un errore.</documentation>
			<input message="tns:getWorkflows" />
			<output message="tns:getWorkflowsResponse" />
			<fault message="tns:UnknownNames" name="UnknownNames" />
			<fault name="GenericFault" message="tns:GenericFault" />
		</operation>
		<operation name="getProcessSummaries">
			<input message="tns:getProcessSummaries"></input>
			<output message="tns:getProcessSummariesResponse"></output>
			<fault message="tns:UnknownCodes" name="UnknownCodes" />
			<fault message="tns:UnknownNames" name="UnknownNames" />
			<fault name="UnknownRoles" message="tns:UnknownRoles" />
			<fault name="GenericFault" message="tns:GenericFault" />
		</operation>
		<operation name="getRoles">
			<input message="tns:getRoles"></input>
			<output message="tns:getRolesResponse"></output>
			<fault name="GenericFault" message="tns:GenericFault" />
		</operation>
	</portType>
	<portType name="ProcessPortType">
		<documentation>Interfaccia del servizio per il controllo di un processo.
Permette di prendere in carico un'azione o di terminarla.
Per effettuare le operazioni, ottenere prima un client ID da usare nei messaggi.</documentation>
		<operation name="takeInCharge">
			<documentation>Prendi in carico un'azione tra quelle disponibili per il processo.
Se la richiesta va a buon fine, viene restituito lo stato dell'azione presa in carico.
Se i parametri di ingresso non sono corretti, oppure se il servizio non può rispondere, viene restituito un errore.</documentation>
			<input message="tns:takeInCharge"></input>
			<output message="tns:takeInChargeResponse"></output>
			<fault name="UnknownCode" message="tns:UnknownCode" />
			<fault name="ActionFault" message="tns:ActionFault" />
			<fault name="ActorFault" message="tns:ActorFault"></fault>
			<fault name="DifferentRole" message="tns:DifferentRole" />
			<fault name="GenericFault" message="tns:GenericFault" />
		</operation>
		<operation name="terminateAction">
			<documentation>Termina un'azione tra quelle attive del processo.
E' possibile specificare le successive azioni da istanziare (se l'azione terminata è di tipo semplice).
Se la richiesta va a buon fine, viene restituito il tempo di terminazione, assieme a tutte le modifiche 
che la terminazione ha apportato: per le azioni semplici, lo stato delle nuove azioni istanziate (richieste in ingresso),
mentre per le azioni di processo, il nuovo processo creato.
Se i parametri di ingresso non sono corretti, oppure se il servizio non può rispondere, viene restituito un errore.</documentation>
			<input message="tns:terminateAction"></input>
			<output message="tns:terminateActionResponse"></output>
			<fault message="tns:UnknownCode" name="UnknownCode" />
			<fault message="tns:UnknownNames" name="UnknownNames" />
			<fault name="ActionFault" message="tns:ActionFault" />
			<fault name="GenericFault" message="tns:GenericFault" />
		</operation>
		<operation name="takeClientID">
			<documentation>Permette di ottenere un identificativo per contraddistinguere un client.
Le richieste saranno considerate univoche in base a clientID (ottenuto con questa operazione) 
e requestID (generato dal client ad ogni richiesta).
Se il servizio non può rispondere, viene restituito un errore.</documentation>
			<input message="tns:takeClientIDRequest"></input>
			<output message="tns:takeClientIDResponse"></output>
			<fault name="GenericFault" message="tns:GenericFault" />
		</operation>
	</portType>

	<portType name="WorkflowPortType">
		<documentation>Interfaccia del servizio per il controllo del workflow.
Permette di creare nuovi processi.
Per effettuare le operazioni, ottenere prima un client I da usare nei messaggi.</documentation>
		<operation name="newProcess">
			<input message="tns:newProcess"></input>
			<output message="tns:newProcessResponse"></output>
			<fault name="UnknownName" message="tns:UnknownName"></fault>
			<fault name="GenericFault" message="tns:GenericFault"></fault>
		</operation>
		<operation name="takeClientID">
			<input message="tns:takeClientIDRequest"></input>
			<output message="tns:takeClientIDResponse"></output>
			<fault name="GenericFault" message="tns:GenericFault" />
		</operation>
	</portType>
	<binding name="WorkflowPortBinding" type="tns:WorkflowPortType">

		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<operation name="newProcess">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/newProcess" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>

			<fault name="UnknownName">

				<soap:fault use="literal" name="UnknownName" />
			</fault>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
		</operation>
		<operation name="takeClientID">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/takeClientID" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
		</operation>
	</binding>
	<binding name="WorkflowInfoPortBinding"
		type="tns:WorkflowInfoPortType">

		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<operation name="getWorkflowNames">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/getWorkflowNames" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
		</operation>
		<operation name="getWorkflows">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/getWorkflows" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>
			<fault name="UnknownNames">

				<soap:fault use="literal" name="UnknownNames" />
			</fault>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
		</operation>
		<operation name="getProcessSummaries">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/getProcessSummaries" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>
			<fault name="UnknownCodes">

				<soap:fault use="literal" name="UnknownCodes" />
			</fault>
			<fault name="UnknownNames">

				<soap:fault use="literal" name="UnknownNames" />
			</fault>
			<fault name="UnknownRoles">

				<soap:fault use="literal" name="UnknownRoles" />
			</fault>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
		</operation>
		<operation name="getRoles">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/getRoles" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
		</operation>
	</binding>

	<binding name="ProcessPortBinding" type="tns:ProcessPortType">

		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<operation name="takeInCharge">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/takeInCharge" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>
			<fault name="UnknownCode">

				<soap:fault use="literal" name="UnknownCode" />
			</fault>
			<fault name="ActionFault">

				<soap:fault use="literal" name="ActionFault" />
			</fault>
			<fault name="ActorFault">

				<soap:fault use="literal" name="ActorFault" />
			</fault>
			<fault name="DifferentRole">

				<soap:fault use="literal" name="DifferentRole" />
			</fault>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
		</operation>
		<operation name="terminateAction">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/terminateAction" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>

			<fault name="UnknownNames">

				<soap:fault use="literal" name="UnknownNames" />
			</fault>
			<fault name="ActionFault">

				<soap:fault use="literal" name="ActionFault" />
			</fault>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
			<fault name="UnknownCode">

				<soap:fault use="literal" name="UnknownCode" />
			</fault>
		</operation>
		<operation name="takeClientID">

			<soap:operation
				soapAction="http://pad.polito.it/Workflow/takeClientID" />
			<input>

				<soap:body use="literal" />
			</input>
			<output>

				<soap:body use="literal" />
			</output>
			<fault name="GenericFault">

				<soap:fault use="literal" name="GenericFault" />
			</fault>
		</operation>
	</binding>
	<service name="WorkflowService">
		<documentation>Servizio per il controllo del workflow.
Permette di creare nuovi processi.
Per effettuare le operazioni, ottenere prima un client I da usare nei messaggi.</documentation>
		<port name="WorkflowPort" binding="tns:WorkflowPortBinding">
			<soap:address location="WF_REPLACE_WITH_ACTUAL_URL" />
		</port>
	</service>
	<service name="WorkflowInfoService">
		<documentation>Servizio di informazioni sullo stato dei workflow e dei processi.
Non permettere di modificare lo stato di workflow o processi</documentation>
		<port name="WorkflowInfoPort" binding="tns:WorkflowInfoPortBinding">
			<soap:address location="WFINFO_REPLACE_WITH_ACTUAL_URL" />
		</port>
	</service>
	<service name="ProcessService">
		<documentation>Servizio per il controllo di un processo.
Permette di prendere in carico un'azione o di terminarla.
Per effettuare le operazioni, ottenere prima un client ID da usare nei messaggi.</documentation>
		<port name="ProcessPort" binding="tns:ProcessPortBinding">
			<soap:address location="PROC_REPLACE_WITH_ACTUAL_URL" />
		</port>
	</service>
</definitions>
