<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.org/wfInfo"
	xmlns:tns="http://www.example.org/wfInfo" elementFormDefault="qualified">

	<element name="workflowMonitor" type="tns:workflowMonitorType">
		<key name="workflowNameKey">
			<selector xpath="tns:workflow"></selector>
			<field xpath="@name"></field>
		</key>

		<keyref name="processActionKeyref" refer="tns:workflowNameKey">
			<selector xpath="tns:workflow/tns:processAction"></selector>
			<field xpath="@actionWorkflow"></field>
		</keyref>

		<key name="actorNameKey">
			<selector xpath="tns:actor"></selector>
			<field xpath="@name"></field>
		</key>
		
		<keyref name="actorKeyref" refer="tns:actorNameKey">
			<selector xpath="tns:workflow/tns:process/tns:actionStatus"></selector>
			<field xpath="@actor"></field>
		</keyref>
	</element>

	<complexType name="workflowMonitorType">
		<sequence>
			<element name="workflow" type="tns:workflowType" maxOccurs="unbounded"
				minOccurs="1">


				<key name="actionNameKey">
					<selector xpath="tns:simpleAction|tns:processAction"></selector>
					<field xpath="@name"></field>
				</key>

				<keyref name="actionStatusKeyref" refer="tns:actionNameKey">
					<selector xpath="tns:process/tns:actionStatus"></selector>
					<field xpath="@action"></field>
				</keyref>

				<keyref name="possibleNextActionKeyref" refer="tns:actionNameKey">
					<selector xpath="tns:simpleAction/tns:possibleNextAction"></selector>
					<field xpath="."></field>
				</keyref>
			</element>
			<element name="actor" type="tns:actorType" maxOccurs="unbounded"
				minOccurs="0"></element>
		</sequence>

	</complexType>

	<complexType name="workflowType">
		<sequence>
			<choice maxOccurs="unbounded" minOccurs="1">
				<element name="simpleAction" type="tns:simpleActionType">
					<unique name="dummy1">
						<selector xpath="tns:possibleNextAction"></selector>
						<field xpath="."></field>
					</unique>
				</element>
				<element name="processAction" type="tns:processActionType"></element>
			</choice>
			<element name="process" type="tns:processType" maxOccurs="unbounded"
				minOccurs="0">
			</element>
		</sequence>

		<attribute name="name" type="tns:idType" use="required"></attribute>
	</complexType>

	<complexType name="actorType">
		<attribute name="name" type="tns:alphaType" use="required"></attribute>
		<attribute name="role" type="string" use="required"></attribute>
	</complexType>

	<complexType name="actionType">
		<attribute name="automaticallyIstantiated" type="boolean"
			default="false"></attribute>
		<attribute name="name" type="tns:idType" use="required"></attribute>
		<attribute name="role" type="string" use="required"></attribute>
	</complexType>

	<complexType name="processType">
		<sequence>
			<element name="actionStatus" type="tns:actionStatusType"
				maxOccurs="unbounded" minOccurs="0"></element>
		</sequence>
		<attribute name="startTime" type="dateTime" use="required"></attribute>
	</complexType>



	<complexType name="simpleActionType">
		<complexContent>
			<extension base="tns:actionType">
				<sequence>
					<element name="possibleNextAction" type="tns:idType"
						maxOccurs="unbounded" minOccurs="0"></element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="processActionType">
		<complexContent>
			<extension base="tns:actionType">
				<attribute name="actionWorkflow" type="tns:idType" use="required"></attribute>
			</extension>
		</complexContent>
	</complexType>

	<simpleType name="alphaType">
		<restriction base="string">
			<pattern value="[a-zA-Z]|[a-zA-Z][a-zA-Z ]*[a-zA-Z]"></pattern>
		</restriction>
	</simpleType>

	<simpleType name="idType">
		<restriction base="string">
			<pattern value="[a-zA-Z]\w*"></pattern>
		</restriction>
	</simpleType>

	<complexType name="actionStatusType">
		<attribute name="action" type="tns:idType" use="required"></attribute>
		<attribute name="actor" type="tns:alphaType"></attribute>
		<attribute name="terminationTime" type="dateTime"></attribute>
	</complexType>



	<group name="NewGroupDefinition">
		<sequence></sequence>
	</group>
</schema>