package it.polito.pd2.WF.sol6.service;

import java.util.logging.Logger;

import it.polito.pd2.WF.sol6.service.WorkflowServer.Errors;
import it.polito.pd2.WF.sol6.service.WorkflowServer.Messages;
import it.polito.pd2.WF.sol6.service.gen.GenericFault_Exception;
import it.polito.pd2.WF.sol6.service.gen.ProcessSummary;
import it.polito.pd2.WF.sol6.service.gen.UnknownName;
import it.polito.pd2.WF.sol6.service.gen.WorkflowPortType;
import javax.jws.WebService;

@WebService(
		name="WorkflowPortType", 
		endpointInterface="it.polito.pd2.WF.sol6.service.gen.WorkflowPortType", 
		wsdlLocation="META-INF/WorkflowService.wsdl",
		targetNamespace="http://pad.polito.it/Workflow", 
		serviceName="WorkflowService", portName="WorkflowPort")
public class WorkflowServiceImpl implements WorkflowPortType {

	private WorkflowServer server;
	private static Logger logger = Logger.getLogger(WorkflowServiceImpl.class.getName());
	
	public WorkflowServiceImpl() {
		server=WorkflowServer.getInstance();
	}
	
	@Override
	public String takeClientID() throws GenericFault_Exception {
		try {
			server.takeClientID();
		} catch (WorkflowServerException e) {
			logger.warning(Messages.SERVER_NOT_READY);
			throw new GenericFault_Exception(
					Messages.SERVICE_UNAVAILABLE,
					Errors.SERVICE_UNAVAILABLE,
					e);
		}
		return null;
	}
	
	@Override
	public ProcessSummary newProcess(String clientID, int requestID,
			String workflowName) throws GenericFault_Exception, UnknownName {
		// TODO Auto-generated method stub
		return null;
	}
	
	

}
